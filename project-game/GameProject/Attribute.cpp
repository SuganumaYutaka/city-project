/*==============================================================================

    Attribute.cpp - ハーフエッジ構造ー属性の抽象インターフェイス
                                                       Author : Yutaka Suganuma
                                                       Date   : 2018/2/4
==============================================================================*/

/*------------------------------------------------------------------------------
	インクルードファイル
------------------------------------------------------------------------------*/
#include "Attribute.h"
#include "HalfEdgeModel.h"
#include "Vertex.h"
#include "Edge.h"
#include "Face.h"

using namespace HalfEdgeDataStructure;

/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
VertexAttribute::VertexAttribute(Model* model, int id) : m_Model(model), m_ID(id)
{
	//本体とリンク
	m_Model->GetVertex( m_ID)->LinkAttribute( this);
}

/*------------------------------------------------------------------------------
	モデルから頂点を取得
------------------------------------------------------------------------------*/
Vertex* VertexAttribute::GetVertex(void)
{
	if (m_ID < 0)
	{
		return NULL;
	}

	return m_Model->GetVertex( m_ID);
}

/*------------------------------------------------------------------------------
	頂点が消去されたときの処理
------------------------------------------------------------------------------*/
void VertexAttribute::OnDeleteVertex(void)
{
	//リンクの解除をしない
	m_ID = -1;

	//消去する
	delete this;
}

/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
EdgeAttribute::EdgeAttribute(Model* model, int id) : m_Model(model), m_ID(id)
{
	//本体とリンク
	m_Model->GetEdge( m_ID)->LinkAttribute( this);
}

/*------------------------------------------------------------------------------
	モデルから辺を取得
------------------------------------------------------------------------------*/
Edge* EdgeAttribute::GetEdge(void)
{
	if (m_ID < 0)
	{
		return NULL;
	}

	return m_Model->GetEdge( m_ID);
}

/*------------------------------------------------------------------------------
	辺が消去されたときの処理
------------------------------------------------------------------------------*/
void EdgeAttribute::OnDeleteEdge(void)
{
	//リンクの解除をしない
	m_ID = -1;

	//消去する
	delete this;
}

/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
FaceAttribute::FaceAttribute(Model* model, int id) : m_Model(model), m_ID(id)
{
	//本体とリンク
	m_Model->GetFace( m_ID)->LinkAttribute( this);
}

/*------------------------------------------------------------------------------
	モデルから面を取得
------------------------------------------------------------------------------*/
Face* FaceAttribute::GetFace(void)
{
	if (m_ID < 0)
	{
		return NULL;
	}

	return m_Model->GetFace( m_ID);
}

/*------------------------------------------------------------------------------
	面が消去されたときの処理
------------------------------------------------------------------------------*/
void FaceAttribute::OnDeleteFace(void)
{
	//リンクの解除をしない
	m_ID = -1;

	//消去する
	delete this;
}
