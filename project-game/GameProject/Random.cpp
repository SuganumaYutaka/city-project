/*==============================================================================

    Random.cpp - 乱数
                                                       Author : Yutaka Suganuma
                                                       Date   : 2017/12/21
==============================================================================*/

/*------------------------------------------------------------------------------
	インクルードファイル
------------------------------------------------------------------------------*/
#include "Random.h"

using namespace std;

/*------------------------------------------------------------------------------
	ランダム生成クラス
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
Random::Random()
{
	//シード値の設定
	random_device random;
	m_Seed = random();

	//デバイス（擬似乱数）の設定
	m_RandomDevice = new RandomMt19937( m_Seed);
}

/*------------------------------------------------------------------------------
	デストラクタ
------------------------------------------------------------------------------*/
Random::~Random()
{
	UninitDevice();
}

/*------------------------------------------------------------------------------
	デバイス終了
------------------------------------------------------------------------------*/
void Random::UninitDevice()
{
	if( m_RandomDevice)
	{
		delete m_RandomDevice;
		m_RandomDevice = NULL;
	}
}

/*------------------------------------------------------------------------------
	シード値を設定する
------------------------------------------------------------------------------*/
void Random::SetSeed(int seed)
{
	m_Seed = seed;
	SetDefault();
}

/*------------------------------------------------------------------------------
	シード値をリセットする
------------------------------------------------------------------------------*/
void Random::ResetSeed(void)
{
	random_device random;
	m_Seed = random();

	//乱数のデフォルト化
	SetDefault();
}

/*------------------------------------------------------------------------------
	乱数のデフォルト化
------------------------------------------------------------------------------*/
void Random::SetDefault(void)
{
	UninitDevice();
	m_RandomDevice = new RandomMt19937( m_Seed);
}

/*------------------------------------------------------------------------------
	乱数の一様分布範囲指定（int）
------------------------------------------------------------------------------*/
void Random::SetRangeInt(int min, int max)
{
	UninitDevice();
	m_RandomDevice = new RandomUniformIntDistribution( m_Seed, min, max);
}

/*------------------------------------------------------------------------------
	乱数の一様分布範囲指定（float）
------------------------------------------------------------------------------*/
void Random::SetRangeFloat(float min, float max)
{
	UninitDevice();
	m_RandomDevice = new RandomUniformFloatDistribution( m_Seed, min, max);
}

/*------------------------------------------------------------------------------
	乱数の取得（int）
------------------------------------------------------------------------------*/
int Random::GetInt(void)
{
	return m_RandomDevice->GetInt();
}

/*------------------------------------------------------------------------------
	乱数の取得（float）
------------------------------------------------------------------------------*/
float Random::GetFloat(void)
{
	return m_RandomDevice->GetFloat();
}

/*------------------------------------------------------------------------------
	擬似乱数生成デバイス
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
RandomMt19937::RandomMt19937(unsigned int seed)
{
	m_Mt19937 = new mt19937( seed);

}

/*------------------------------------------------------------------------------
	デストラクタ
------------------------------------------------------------------------------*/
RandomMt19937::~RandomMt19937()
{
	delete m_Mt19937;
}

/*------------------------------------------------------------------------------
	乱数の取得（int）
------------------------------------------------------------------------------*/
int RandomMt19937::GetInt( void)
{
	return (int)(*m_Mt19937)();
}

/*------------------------------------------------------------------------------
	乱数の取得（float）
------------------------------------------------------------------------------*/
float RandomMt19937::GetFloat( void)
{
	return (float)(*m_Mt19937)();
}

/*------------------------------------------------------------------------------
	一様分布乱数生成デバイス（int）
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
RandomUniformIntDistribution::RandomUniformIntDistribution(unsigned int seed, int min, int max)
{
	m_Mt19937 = new mt19937( seed);
	m_Uniform = new uniform_int_distribution<int>( min, max);
}

/*------------------------------------------------------------------------------
	デストラクタ
------------------------------------------------------------------------------*/
RandomUniformIntDistribution::~RandomUniformIntDistribution()
{
	delete m_Mt19937;
	delete m_Uniform;
}

/*------------------------------------------------------------------------------
	乱数の取得（int）
------------------------------------------------------------------------------*/
int RandomUniformIntDistribution::GetInt( void)
{
	return (*m_Uniform)(*m_Mt19937);
}

/*------------------------------------------------------------------------------
	乱数の取得（float）
------------------------------------------------------------------------------*/
float RandomUniformIntDistribution::GetFloat( void)
{
	return (float)(*m_Uniform)(*m_Mt19937);
}

/*------------------------------------------------------------------------------
	一様分布乱数生成デバイス（float）
------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
RandomUniformFloatDistribution::RandomUniformFloatDistribution(unsigned int seed, float min, float max)
{
	m_Mt19937 = new mt19937( seed);
	m_Uniform = new uniform_real_distribution<float>( min, max);
}

/*------------------------------------------------------------------------------
	デストラクタ
------------------------------------------------------------------------------*/
RandomUniformFloatDistribution::~RandomUniformFloatDistribution()
{
	delete m_Mt19937;
	delete m_Uniform;
}

/*------------------------------------------------------------------------------
	乱数の取得（int）
------------------------------------------------------------------------------*/
int RandomUniformFloatDistribution::GetInt( void)
{
	return (int)(*m_Uniform)(*m_Mt19937);
}

/*------------------------------------------------------------------------------
	乱数の取得（float）
------------------------------------------------------------------------------*/
float RandomUniformFloatDistribution::GetFloat( void)
{
	return (*m_Uniform)(*m_Mt19937);
}

