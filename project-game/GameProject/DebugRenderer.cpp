/*==============================================================================

    DebugRenderer.cpp - デバッグ描画
                                                       Author : Yutaka Suganuma
                                                       Date   : 2017/7/03
==============================================================================*/

/*------------------------------------------------------------------------------
	インクルードファイル
------------------------------------------------------------------------------*/
#include "DebugRenderer.h"

/*------------------------------------------------------------------------------
	静的メンバ変数宣言
------------------------------------------------------------------------------*/
std::string DebugRenderer::m_strText;

/*------------------------------------------------------------------------------
	コンストラクタ
------------------------------------------------------------------------------*/
DebugRenderer::DebugRenderer( LPDIRECT3DDEVICE9 pDevice)
{
	//フォント設定
	D3DXCreateFont( 
		pDevice,
		20, 0,				//高さ、幅（0で高さに合わせる）
		0, 0, FALSE,
		SHIFTJIS_CHARSET,
		OUT_DEFAULT_PRECIS,
		DEFAULT_QUALITY,
		DEFAULT_PITCH,
		"Terminal",			//フォント名
		&m_pFont);

	m_Rect = { 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT};		//文字を表示する範囲
}

/*------------------------------------------------------------------------------
	デストラクタ
------------------------------------------------------------------------------*/
DebugRenderer::~DebugRenderer( void)
{
	if( m_pFont != NULL)
	{
		m_pFont->Release();
		m_pFont = NULL;
	}
}

/*------------------------------------------------------------------------------
	デバッグ表示文字追加
------------------------------------------------------------------------------*/
void DebugRenderer::AddText(std::string Text)
{
#ifdef _DEBUG
	m_strText += Text;
#endif // _DEBUG
}

/*------------------------------------------------------------------------------
	デバッグ表示文字リセット
------------------------------------------------------------------------------*/
void DebugRenderer::ClearText(void)
{
#ifdef _DEBUG
	m_strText.clear();

	//FPS表示
	m_strText += "FPS : " + std::to_string( Game::GetFPS()) + "\n";
	
#endif // _DEBUG
}

/*------------------------------------------------------------------------------
	デバッグ文字描画
------------------------------------------------------------------------------*/
void DebugRenderer::DrawText()
{
	//描画
	m_pFont->DrawText( 
		NULL,
		m_strText.c_str(),					//文字列
		-1,									//文字数（-1で全部）
		&m_Rect,							//範囲
		DT_LEFT,							//フォーマット
		D3DCOLOR_RGBA( 55, 155, 55, 255));	//カラー
}


