/*==============================================================================

    Shape.cpp - 建物の自動生成ー形状
                                                       Author : Yutaka Suganuma
                                                       Date   : 2017/12/7
==============================================================================*/

/*------------------------------------------------------------------------------
	インクルードファイル
------------------------------------------------------------------------------*/
#include "Shape.h"
#include "Wall.h"
#include "Roof.h"
#include "DebugLog.h"

/*------------------------------------------------------------------------------
	終了処理
------------------------------------------------------------------------------*/
void Shape::Uninit( void)
{
	//屋根の消去
	for (auto roof : m_Roofs)
	{
		delete roof;
	}
	m_Roofs.clear();

	//壁の消去
	for (auto wall : m_Walls)
	{
		delete wall;
	}
	m_Walls.clear();
}

/*------------------------------------------------------------------------------
	屋根の追加
------------------------------------------------------------------------------*/
void Shape::AddRoof(Roof* roof)
{
	m_Roofs.push_back( roof);
}

/*------------------------------------------------------------------------------
	壁の追加
------------------------------------------------------------------------------*/
void Shape::AddWall( Wall* wall)
{ 
	m_Walls.push_back( wall);
}

/*------------------------------------------------------------------------------
	屋根の削除
------------------------------------------------------------------------------*/
void Shape::SubRoof(Roof* roof)
{
	for (auto ite = m_Roofs.begin(); ite != m_Roofs.end(); ++ite)
	{
		if (*ite == roof)
		{
			delete roof;
			m_Roofs.erase( ite);
			return;
		}
	}

	DebugLog::Add( "ShapeにRoofが見つからない\n");
}

/*------------------------------------------------------------------------------
	壁の削除
------------------------------------------------------------------------------*/
void Shape::SubWall( Wall* wall)
{ 
	for (auto ite = m_Walls.begin(); ite != m_Walls.end(); ++ite)
	{
		if (*ite == wall)
		{
			delete wall;
			m_Walls.erase( ite);
			return;
		}
	}

	DebugLog::Add( "ShapeにWallが見つからない\n");
}
